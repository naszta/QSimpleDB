CMAKE_MINIMUM_REQUIRED(VERSION 2.8.0)

PROJECT(SimpleDB)

SET(SimpleDB_MAJOR_VERSION 0)
SET(SimpleDB_MINOR_VERSION 1)
SET(SimpleDB_BUILD_VERSION 0)

IF(EXISTS ${SimpleDB_SOURCE_DIR}/.git)
  FIND_PACKAGE(Git)
  IF(GIT_FOUND)
    EXECUTE_PROCESS(
	  COMMAND ${GIT_EXECUTABLE} rev-parse --short HEAD
      WORKING_DIRECTORY "${SimpleDB_SOURCE_DIR}"
      OUTPUT_VARIABLE "SimpleDB_BUILD_VERSION"
	  ERROR_QUIET
	  OUTPUT_STRIP_TRAILING_WHITESPACE
    )
	MESSAGE( STATUS "Git version: ${SimpleDB_BUILD_VERSION}" )
  ELSE(GIT_FOUND)
    SET(SimpleDB_BUILD_VERSION 0) 
  ENDIF(GIT_FOUND)
ENDIF(EXISTS ${SimpleDB_SOURCE_DIR}/.git)

SET(SimpleDB_VERSION "${SimpleDB_MAJOR_VERSION}.${SimpleDB_MINOR_VERSION}.${SimpleDB_BUILD_VERSION}")

CONFIGURE_FILE(${SimpleDB_SOURCE_DIR}/SimpleDBVersion.h.in ${SimpleDB_BINARY_DIR}/SimpleDBVersion.h @ONLY)

SET(LIBRARY_OUTPUT_PATH ${SimpleDB_BINARY_DIR}/bin CACHE PATH "Single output directory for building all libraries.")
SET(EXECUTABLE_OUTPUT_PATH ${SimpleDB_BINARY_DIR}/bin CACHE PATH "Single output directory for building all executables.")
MARK_AS_ADVANCED(LIBRARY_OUTPUT_PATH EXECUTABLE_OUTPUT_PATH)

INCLUDE_DIRECTORIES(${SimpleDB_BINARY_DIR})

IF(WIN32)
  ADD_DEFINITIONS(-DWINVER=0x050103 -D_WIN32_WINNT=0x050103)
ENDIF(WIN32)

ADD_SUBDIRECTORY(lib)
ADD_SUBDIRECTORY(gui)
